102. Binary Tree Level Order Traversal

Iterative Solution:
-----------------

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def levelOrder(self, root):
        
        if root is None:
            return 
        queue = [root]
        res = []
        
        while queue:
            queue_len = len(queue)
            curr_level = []
            
            while queue_len > 0:
                curr_node = queue.pop(0)
                curr_level.append(curr_node.val)
                if curr_node.left != None:
                    queue.append(curr_node.left)
                if curr_node.right != None:
                    queue.append(curr_node.right)
                queue_len -= 1
                
            res.append(curr_level)
            
        return res
            
        
        