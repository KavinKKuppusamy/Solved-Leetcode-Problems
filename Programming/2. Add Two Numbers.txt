2. Add Two Numbers


Iterative method:
--------------------
# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def addTwoNumbers(self, list1, list2):
        carry = 0 
        ret_node = head = prev_node= None
        ishead = True
        while list1 or list2:
            l1 = list1.val if list1 else 0
            l2 = list2.val if list2 else 0
            carry , val = divmod(l1 + l2 + carry,10)
            if ishead:
                ret_node = ListNode(val)
                head = ret_node
                ishead = False              
            else:
                ret_node = ListNode(val)
                prev_node.next = ret_node
            if list1:
                list1 = list1.next
            if list2:
                list2 = list2.next
            prev_node = ret_node
        if carry > 0:
            ret_node.next = ListNode(carry)
        return head
            
Recursive Method:
-----------------


# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def addTwoNumbers(self, l1, l2,carry= 0):
        val1 = l1.val if l1 else 0
        val2 = l2.val if l2 else 0
        carry, val3 = divmod(val1 + val2 + carry, 10)
        node = ListNode(val3)
        if l1:
            l1 = l1.next
        if l2:
            l2 = l2.next
        if l1 or l2 or carry:
            node.next = self.addTwoNumbers(l1, l2, carry)
        return node
